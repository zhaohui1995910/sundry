（1）return 不能写成“temp=return xxxx”的形式，会提示语法错误，但是yield可以写成“temp=yield xxxx”的形式；

（2）普通函数return后面的语句都是不会再执行的，但是yield语句后面的依然会执行，但是需要注意的是，由于“延迟加载”特性，yield后面的代码并不是在第一次迭代的时候执行的，而是第二次迭代的时候才执行第一次yield后面没有执行的代码。也正是这个特性，构成了yield为什么是实现协程的最简单实现。

（3）使用send()方法传进去的值，实际上就是yield表达式返回的值，这就是为什么前面每次输出print(temp)都打印出None，因为没有send值，所以temp为None，但是send（100）之后却打印100，因为此时temp就是100了。



协程和线程

1、最大的优势就是协程极高的执行效率，因为子程序切换不是线程切换，而是由程序自身控制因此没有线程切换的开销，和多线程相比线程数也多，协程的性能优势越明显。

2、协程不需要多线程锁的机制，因为只有一个线程，页不存在同时写变量冲突，在协程中控制共享资源不加锁，只需要判断状态就好，所以执行效率比多线程高很多。
